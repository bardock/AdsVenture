@model MvcSiteMapProvider.Web.Html.Models.MenuHelperModel
@using System.Web.Mvc.Html
@using MvcSiteMapProvider.Web.Html.Models

<nav class="navbar navbar-default navbar-fixed-top" role="navigation">
    <div class="container-fluid">

        @* Brand and toggle get grouped for better mobile display *@
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @{ var firstNode = Model.Nodes.First(); }
            @if (firstNode.IsRootNode)
            {
                Model.Nodes = Model.Nodes.Skip(1).ToList();
                <a class="navbar-brand" href="@firstNode.Url">@firstNode.Title</a>
            }
        </div>

        @* Collect the nav links, forms, and other content for toggling *@
        <div class="collapse navbar-collapse">
            <ul class="nav navbar-nav">
                @foreach (var node in Model.Nodes)
                {
                    if (!node.Children.Any())
                    {
                        <li class="@(node.IsCurrentNode || node.IsInCurrentPath ? "active" : "")">
                            @Html.DisplayFor(m => node)
                        </li>
                    }
                    else
                    {
                        <li class="dropdown @(node.IsCurrentNode || node.IsInCurrentPath ? "active" : "")">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">@node.Title <span class="caret"></span></a>
                            @Html.DisplayFor(m => node.Children)
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
</nav>